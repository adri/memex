// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
const spec_Identifier = {__proto__:null,and:42, or:48}
export const parser = LRParser.deserialize({
  version: 14,
  states: "#rOVQPOOObQPO'#C^O!`QPO'#C`OOQO'#Ca'#CaO!hQPO'#CdO!|QPO'#CuOOQO'#Cy'#CyQVQPOOOOQO,58z,58zOOQO,58},58}O#hQQO,59OO#mQPO,59OOVQPO,59YOVQPO,59YOOQO'#Cp'#CpOOQO'#Cs'#CsOOQO-E6s-E6sOOQO1G.j1G.jOOQO'#Cl'#ClOOQO1G.t1G.tO#uQPO1G.t",
  stateData: "$a~OlOS~ORPOUROnQO~ORQXUQXYXX[XX]XX^XX_XXaXXcQXeQXfQXhQXjQXnQX~ORWOUXO~OYYO[YO]YO^YO_ZOaZO~Oc[Oe^Of]Oh_ORiXUiXjiXniX~OZaO~ORbOUbO~Oc[Oe^ORbiUbifbihbijbinbi~O",
  goto: "!gnPPoPooPoouPPPPPP{PoP!OPP!SP!VPPP!]XUOV[]XSOV[]RaZT[TdR]TQVOR`VSTOVQc[Rd]",
  nodeNames: "âš  Search Prefix Identifier NotPrefix Exact QuotedString NotExact FilterExpression FilterKey GreaterThan Number GreaterThanEquals LessThan LessThanEquals Equals FilterValue NotEquals BooleanExpression Logic Logic and Logic Logic or",
  maxTerm: 30,
  skippedNodes: [0],
  repeatNodeCount: 1,
  tokenData: "'{~RgX^!jpq!jqr#_rs#lvw%`}!O%k!Q![%p![!]&w!^!_'P!_!`'^!`!a'c!c!}&f#R#S&f#T#o&f#p#q'p#y#z!j$f$g!j#BY#BZ!j$IS$I_!j$I|$JO!j$JT$JU!j$KV$KW!j&FU&FV!j~!oYl~X^!jpq!j#y#z!j$f$g!j#BY#BZ!j$IS$I_!j$I|$JO!j$JT$JU!j$KV$KW!j&FU&FV!j~#dPn~!_!`#g~#lOa~~#oVOY$UZr$Us#O$U#O#P$v#P;'S$U;'S;=`%Y<%lO$U~$XWOY$UZr$Urs$qs#O$U#O#P$v#P;'S$U;'S;=`%Y<%lO$U~$vOU~~$yTOY$UYZ$UZ;'S$U;'S;=`%Y<%lO$U~%]P;=`<%l$U~%cPvw%f~%kOc~~%pOn~R%wTRPZQ!O!P&W!Q![%p!c!}&f#R#S&f#T#o&fQ&ZP!Q![&^Q&cPZQ!Q![&^P&kSRP!Q![&f!c!}&f#R#S&f#T#o&f~&|P_~qr#g~'UP]~!_!`'X~'^O^~~'cO_~~'hPY~!_!`'k~'pO[~~'sP#p#q'v~'{Of~",
  tokenizers: [0, 1],
  topRules: {"Search":[0,1]},
  specialized: [{term: 3, get: value => spec_Identifier[value] || -1}],
  tokenPrec: 0
})
